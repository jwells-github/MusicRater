@model ReleaseViewModel
@{ 
    ViewData["Title"] = Model.Title;
    int minimumRating = 1;
    int maximumRating = 10;
    int defaultSelectOption = 10;
    bool releaseRated = false;
    if(Model.UserRating != null)
    {
        if (Model.UserRating.Rating != 0)
        {
            releaseRated = true;
            defaultSelectOption = Model.UserRating.Rating;
        }
    }
}

<div>
    <h1>@Model.Artist.Name</h1>
    <h2>@Model.Title</h2>
    <p>
        Released: @(Model.ReleaseDay > 0 ? Model.ReleaseDay.ToString() : "")
        @Model.MonthString()
        @(Model.ReleaseYear > 0 ? Model.ReleaseYear.ToString() : "")
    </p>
    <p>Average @Model.AverageRating / 10 from @Model.NumberOfRatings Ratings</p>

    @if (User.Identity.IsAuthenticated)
    {
        int numberOfGenres = 4;
        <div>
            @foreach (ReleaseGenre releaseGenre in Model.ReleaseGenres.OrderBy(rg => rg.GenreVoting).Skip(0).Take(numberOfGenres))
            {
                <a>@releaseGenre.Genre.Name</a>
            }
        </div>
        <a asp-action="Genres" asp-route-id="@Model.ReleaseID">Suggest a Genre</a>
        <h3>@(releaseRated ? "You rated this release " + @defaultSelectOption + " / 10" : "You have not rated this release")</h3>
        <div class="form-group">
            <form method="post" action="/Release/Rate/@Model.ReleaseID">
                <select id="rating" name="rating">
                    @for (int i = maximumRating; i >= minimumRating; i--)
                    {
                        @if (releaseRated)
                        {
                            @if (i == Model.UserRating.Rating)
                            {
                                <option selected="selected">@i</option>
                                continue;
                            }
                        }
                        <option>@i</option>
                    }
                </select>
                <button class="btn btn-primary" type="submit">
                    @(releaseRated ? "Update Rating" : "Rate")
                </button>
            </form>
        </div>

        <div class="form-group">
            <form method="post" action="/Review/Submit/@Model.ReleaseID">
                <input name="reviewTitle" id="reviewTitle" placeholder="Review Title"
                       value="@(@Model.UserReview != null ? Model.UserReview.Title : "")" />
                <textarea name="reviewText" id="reviewText" placeholder="Review Text">@(@Model.UserReview != null ? Model.UserReview.ReviewText : "")</textarea>
                <button class="btn btn-primary" type="submit">@(@Model.UserReview != null ? "Edit Review" : "Submit Review")</button>
            </form>
        </div>


        <div class="form-group">
            <form method="post" action="/Release/Delete/@Model.ReleaseID">
                <button class="btn btn-danger" type="submit">Delete Release</button>
            </form>
        </div>
    }

    @foreach (ReleaseReview releaseReview in @Model.ReleaseReviews)
    {
        <h3>@releaseReview.Title</h3>
        <h4>Posted by @releaseReview.User.UserName</h4>
        <p>@releaseReview.UserVotes.Count Votes</p>
        <p>@releaseReview.ReviewText</p>
        @if (User.Identity.IsAuthenticated)
        {
            <div>
                <form method="post" action="/Review/Vote/@releaseReview.ReleaseReviewID">
                    <button class="btn btn-primary" type="submit"
                        >@(releaseReview.UserVotes.Contains(ViewBag.User) ? "Remove Vote" : "Vote")
                    </button>
                </form>
            </div>
        }
    }

</div>