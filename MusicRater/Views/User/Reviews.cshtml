@model PaginatedList<ReleaseReview>
@if (Model.Count > 0)
{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    @foreach (ReleaseReview review in Model)
    {
        <div class="userReview">
            <div class="reviewDetails">
                <div>
                    <div style="@review.Release.GetBackgroundCSS()" class="releaseImage">
                        <a asp-action="Entry" asp-controller="Release" asp-route-id="@review.Release.Id"></a>
                    </div>
                </div>
                <div>
                    <div class="releaseDetails">
                        <a asp-action="Profile" asp-controller="Artist" asp-route-id="@review.Release.ArtistId">@review.Release.Artist.Name</a>
                        <a asp-action="Entry" asp-controller="Release" asp-route-id="@review.Release.Id">@review.Release.Title</a>
                        @if (review.Release.ReleaseYear > 0)
                        {
                            <span>(@review.Release.ReleaseYear)</span>
                        }
                        <span class="rating">Rated <strong>@review.ReleaseRating/10</strong></span>
                    </div>
                </div>
            </div>
            <h3>@review.Title</h3>
            <p>@review.ReviewText</p>
        </div>
    }
    <a asp-action="Index"
       asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-default @nextDisabled">
        Next
    </a>
    }
