@model PaginatedList<ReleaseRating>
@if (Model.Count > 0)
{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    @foreach (ReleaseRating rating in Model)
    {
        <div class="userRating">
            <div>
                <div style="@rating.Release.GetBackgroundCSS()" class="releaseImage">
                    <a asp-action="Entry" asp-controller="Release" asp-route-id="@rating.Release.Id"></a>
                </div>
            </div>
            <div>
                <div class="releaseDetails">
                    <a asp-action="Profile" asp-controller="Artist" asp-route-id="@rating.Release.ArtistId">@rating.Release.Artist.Name</a>
                    <a asp-action="Entry" asp-controller="Release" asp-route-id="@rating.Release.Id">@rating.Release.Title</a>
                    @if (rating.Release.ReleaseYear > 0)
                    {
                        <span>(@rating.Release.ReleaseYear)</span>
                    }
                    <span class="rating">Rated <strong>@rating.Rating/10</strong></span>
                </div>
            </div>
        </div>
    }
    <a asp-action="Index"
       asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-default @nextDisabled">
        Next
    </a>
}
