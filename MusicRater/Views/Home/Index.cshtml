@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div>
    @if (User.Identity.IsAuthenticated)
    {

    }

    <h2>Newest Releases</h2>
    <div class="container listofthings">
        @foreach (Release release in @Model.RecentReleases)
        {
            <div class="release">
                <div>
                    <div class="releaseImage" style="@release.GetBackgroundCSS()">
                        <a asp-controller="Release" asp-action="Entry" asp-route-id="@release.Id"></a>
                    </div>
                    <div class="releaseDetails">
                        <a asp-controller="Artist" asp-action="Profile" asp-route-id="@release.ArtistId">@release.Artist.Name</a>
                        <a asp-controller="Release" asp-action="Entry" asp-route-id="@release.Id">@release.Title</a>
                    </div>
                    <div>
                        <div>
                            <span>@release.AverageRating/10</span>
                            <div class="ratingBar">
                                @{double width = ((release.AverageRating / 10) * 100);}
                                <div style="width:@width%; @GetRatingBarClass(width)">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <h2>Monthly Top Reviews</h2>
    <div class="container listofthings">
        <div class="monthlyTopReviews">
            <div class="listofthings">
                @foreach (ReleaseReview review in Model.MonthlyTopReviews)
                {
                    <div class="userReview">
                        <div class="reviewDetails">
                            <div>
                                <div style="@review.Release.GetBackgroundCSS()" class="releaseImage">
                                    <a asp-action="Entry" asp-controller="Release" asp-route-id="@review.Release.Id"></a>
                                </div>
                            </div>
                            <div>
                                <div class="releaseDetails">
                                    <a asp-action="Profile" asp-controller="Artist" asp-route-id="@review.Release.ArtistId">@review.Release.Artist.Name</a>
                                    <a asp-action="Entry" asp-controller="Release" asp-route-id="@review.Release.Id">@review.Release.Title</a>
                                    @if (review.Release.ReleaseYear > 0)
                                    {
                                        <span>(@review.Release.ReleaseYear)</span>
                                    }
                                    <span class="rating">Rated <strong>@review.ReleaseRating/10</strong></span>
                                </div>
                            </div>
                        </div>
                        <h3>@review.Title</h3>
                        <p>@review.ReviewText</p>
                    </div>
                }
            </div>

        </div>
        <div>
            <h2>Monthly Top Releases</h2>
            <div class="listofthings">
                @foreach (Release release in @Model.MonthlyTopReleases)
                {
                    <div class="release">
                        <div>
                            <div class="releaseImage" style="@release.GetBackgroundCSS()">
                                <a asp-controller="Release" asp-action="Entry" asp-route-id="@release.Id"></a>
                            </div>
                            <div class="releaseDetails">
                                <a asp-controller="Artist" asp-action="Profile" asp-route-id="@release.ArtistId">@release.Artist.Name</a>
                                <a asp-controller="Release" asp-action="Entry" asp-route-id="@release.Id">@release.Title</a>
                            </div>
                            <div>
                                <div>
                                    <span>@release.AverageRating/10</span>
                                    <div class="ratingBar">
                                        @{double width = ((release.AverageRating / 10) * 100);}
                                        <div style="width:@width%; @GetRatingBarClass(width)">

                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

</div>
    @{
        string GetRatingBarClass(double width)
        {
            if (width > 70)
            {
                return "background-color: green;";
            }
            if (width > 40)
            {
                return "background-color: yellow;";
            }
            return "background-color: red;";
        }
    }
